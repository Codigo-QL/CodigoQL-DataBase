[
    {
        "id": 1,
        "codigo_cap": "C1",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora! Só me lembro do RG dele: 12.345.678-9. Use essa informação na tabela 'Moradores' do banco de dados do condomínio.\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela 'Moradores'",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"Moradores\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(Moradores);\n```",
        "personagem_nome": "Emília (telefone)",
        "solucao": "SELECT * FROM Moradores WHERE rg = '12.345.678-9';",
        "feedback_correto": "\"Muito bem! Fique sabendo que sua ajuda salvou uma vida. Irei conversar com sua supervisora sobre este seu ato heróico!\"",
        "feedback_errado": "\"Essas não são as informações que pedi! Não temos tempo para erros, uma vida está em risco!!\"",
        "codigo_base": "C1S1"
    },
    {
        "id": 2,
        "codigo_cap": "C1",
        "narrativa": "A sua ajuda resultou na prisão de mais um assassino investigado pela Unidade de Ciências Comportamentais (UCC) da Polícia Federal (PF).\nAssim que soube do seu feito, Gláucia comentou:\n\"Você tem mais potencial do que eu pensava. Acho que está na hora de lhe dar tarefas mais interessantes do que buscar cafés”. Animada, ela continuou: “Vou ligar para a Emília, a líder da equipe, para ver se ela precisa de nossas habilidades mágicas e tecnológicas\"\nMesmo em um ambiente tão sério, Gláucia mantinha seu jeito descontraído e feliz. No mesmo instante, o telefone tocou. Era Emília.\n\n\"Gláucia, eu já ia te ligar!\". Disse Emília, do outro lado da linha. \"Acabamos de descobrir que Roberto não foi o responsável por todos os assassinatos que aconteceram no condomínio. Há outro assassino em série à solta. Ele deve estar furioso por Roberto ter sido acusado por crimes que não cometeu e, provavelmente, não vai demorar para provar que o verdadeiro culpado ainda não foi pego\"\n\n\"Ótimo! É só me passar as informações. A partir de hoje, estou com reforços, e esse assassino patético não terá chance contra nossas mentes combinadas\"\n\n\"Olá, recruta\". Cumprimentou Emília, com um tom mais sério. \"Fico feliz com a nova adição à equipe. Espero que leve este trabalho muito a sério. Voltando ao caso: testemunhas disseram ter visto um Gol cinza saindo das cenas do crime logo após os assassinatos. Acreditamos que o assassino seja um morador, pois não houve registro de visitantes no condomínio nesses dias. Fomos informados que todos os carros dos residentes estão cadastrados no banco de dados do condomínio e que os registros dizem a casa ao qual pertencem\"\n\"Maravilhoso! Temos tudo o que precisamos, Emília\". Concluiu Gláucia, virando-se para você. \"Recruta, pesquise o código da casa pelo modelo e cor do carro na tabela ‘Veiculos’. Vamos ver o que você encontra\"",
        "dica": "\"Vamos, recruta! A Emília foi bem clara sobre as pistas que temos. A informação está toda na tabela de veículos. Foque no que ela disse e você encontrará o código da casa.\"\n\nPara resolver este desafio, você precisará filtrar os dados da tabela **Veiculos** com base em duas condições simultaneamente: o modelo e a cor do carro. Lembre-se de usar um operador lógico para combinar múltiplas condições na sua cláusula **WHERE**.\n\nA tabela com a resposta se chama **Veiculos**, execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(Veiculos);\n```",
        "enunciado": "Consulte na tabela 'Veiculos' o código da casa ao qual pertence o carro do modelo 'Gol' e da cor 'Cinza'",
        "personagem_nome": "Gláucia",
        "solucao": "SELECT codigo_casa FROM Veiculos WHERE modelo = 'Gol' AND cor = 'Cinza';",
        "feedback_correto": "\"Correto!! Que sorte, só há um único carro em todo o condomínio com essa descrição. Assim fica fácil!\"",
        "feedback_errado": "\"Eu, como sua supervisora, estou decepcionada! Essa consulta não está correta, deixe eu te ajudar e vamos tentar novamente\"",
        "codigo_base": "C1S1"
    },
    {
        "id": 3,
        "codigo_cap": "C1",
        "narrativa": "\"Só tem uma casa com o carro que procuramos, que sorte! Vou ligar para a equipe agora mesmo!\", diz Gláucia, enquanto digita rapidamente no telefone.\n\n\"Dr. Francisco Buarque falando. Gláucia, é você?\", uma nova voz soa pelo telefone. Apesar da formalidade, o tom é de um jovem.\n\n\"Francisco, você precisa parar de falar de um jeito tão formal! Sempre que te ouço, lembro dos professores que me traumatizaram na escola. Enfim, descobrimos que há apenas um carro no condomínio inteiro que bate com a descrição, e ele pertence à casa '1A'\".\n\n\"Dois assassinos em série no mesmo condomínio e agora um único Gol cinza numa comunidade com milhares de pessoas... A probabilidade de tudo isso acontecer é ínfima. Preciso documentar esses achados em um artigo depois…\"\n\n\"Cara, não é hora de pensar nisso\", outra voz desconhecida corta Francisco. \"Gláucia, gatinha, aqui é o Henrique. Fiquei sabendo que virou babá, hein? Espero que tenha fôlego pra te seguir! E falando nisso, Recruta, que bom ter você na equipe! Vou te dar o resumo da nossa linha de investigação para que possa ajudar. A UCC trabalha com perfis comportamentais; para isso, precisamos de padrões, o que nos leva a casos seriais. O padrão de violência e o modus operandi neste caso indicam um agressor homem. O nome é a peça que falta agora. Por favor, verifique na tabela 'Moradores' quem reside na casa '1A'\"\n\nAssim que Henrique lhe passa a tarefa, Gláucia se vira para você e aponta para o computador. É a sua vez de assumir novamente o controle do terminal.",
        "enunciado": "Recupere o nome do morador na tabela 'Moradores' que possui o gênero 'M' e que more na casa '1A'.",
        "dica": "\"E aí, recruta! Bem-vindo ao jogo. A lógica é a mesma de antes, só que agora com as informações que eu te passei. Mostre pra gente o que você sabe fazer!\"\n\nO seu objetivo é consultar a tabela **Moradores**. Assim como no nível anterior, será necessário filtrar a busca utilizando duas condições na cláusula **WHERE** para encontrar o morador que corresponda tanto à casa quanto ao gênero que investigamos.\n\nA tabela que contém a informação se chama **Moradores**. Use o comando a seguir para ver sua estrutura e os nomes exatos das colunas:\n\n```sql\nPRAGMA table_info(Moradores);\n```",
        "feedback_correto": "\"Bingo! Valeu, Recruta. Agora nós podemos ir prender esse palhaço\"",
        "feedback_errado": "\"Recruta, chega de brincadeiras. Isso não é o que pedi. Vamos lá, sei que você consegue\"",
        "personagem_nome": "Henrique (telefone)",
        "solucao": "SELECT nome FROM Moradores WHERE codigo_casa = '1A' AND genero = 'M';",
        "codigo_base": "C1S1"
    },
    {
        "id": 4,
        "codigo_cap": "C1",
        "narrativa": "Depois de um dia exaustivo, seu corpo cedeu assim que encontrou a cama. O sono profundo é interrompido pelo toque insistente do celular. Um número desconhecido. Ao atender, uma voz familiar, de uma formalidade quase cirúrgica, soa do outro lado:\n\n\"Dr. Francisco Buarque falando. Recruta, sua presença é requisitada no escritório imediatamente. Fomos designados a um novo caso em Goiânia, para onde a equipe se deslocará em breve. O transporte aéreo incluirá provisões para a primeira refeição do dia\".\n\nAntes que você possa formular uma resposta, a chamada é encerrada.\n\nVocê se veste às pressas, joga algumas roupas numa mala e segue para o escritório. Já a bordo do jato com o resto da equipe, a reunião se inicia, liderada por Francisco.\n\n\"Fomos notificados sobre três homicídios ocorridos em Goiânia nos últimos dois meses\", ele começa, com o olhar fixo nos arquivos em sua mão. \"A investigação local está estagnada, mas levanta a hipótese de conexão entre os casos. Uma análise preliminar dos relatórios que recebi indica a presença de um padrão ritualístico nas cenas do crime, embora sua natureza exata ainda demande um estudo aprofundado. A metodologia do agressor sugere experiência, o que me leva a postular a existência de vítimas anteriores, ainda não associadas a esta série. Nosso primeiro passo, portanto, será validar essa hipótese. Recruta, sua diretriz inicial é compilar todos os dados de vítimas em Goiânia a partir do ano de 2023. Preciso dessa base de dados para uma análise manual em busca de correlações\".",
        "enunciado": "Consulte, na tabela 'Vitimas', todos os registros que ocorreram na cidade de 'Goiânia' cujo ano de ocorrência seja maior ou igual a 2023.",
        "dica": "\"Recruta, a precisão é fundamental neste estágio. Concentre-se nos dois parâmetros que delimitei para a sua busca: a localidade geográfica e o marco temporal. A intersecção desses dois conjuntos de dados nos fornecerá o que necessito.\"\n\nPara esta consulta, você deverá filtrar a tabela **Vitimas** com base em duas colunas distintas. Uma delas requer uma correspondência de texto exata para a cidade. A outra exige uma comparação numérica, utilizando um operador para selecionar valores que sejam 'maiores ou iguais' ao ano especificado. Lembre-se de combinar estas duas condições na sua cláusula **WHERE**.\n\nA tabela com os dados necessários se chama **Vitimas**. Examine sua estrutura com o comando a seguir para identificar os nomes corretos das colunas.\n\n```sql\nPRAGMA table_info(Vitimas);\n```",
        "feedback_correto": "\"Maravilhoso, agora irei imprimir todos esses registros e fazer uma análise manual bem detalhada. Acredito que consigo passar por tudo isso até chegarmos em Goiânia\"",
        "feedback_errado": "\"Recruta, temo que os dados que me foram apresentados não estão corretos. Peço, por favor, que tente novamente\"",
        "personagem_nome": "Dr. Francisco Buarque",
        "solucao": "SELECT * FROM Vitimas WHERE cidade = 'Goiânia' AND ano_ocorrencia >= 2023;",
        "codigo_base": "C1S2"
    },
    {
        "id": 5,
        "codigo_cap": "C1",
        "narrativa": "Você observa, fascinado, as mãos de Francisco folheando os registros. As páginas passam em um borrão, numa velocidade que desafia a compreensão, e você duvida que um ser humano normal consiga absorver qualquer informação daquele jeito.\n\nUma mão toca levemente seu ombro, e você se vira para encontrar Emília, a líder da equipe, com um pequeno sorriso no rosto.\n\n\"Ei, recruta\", ela diz em voz baixa para não atrapalhar a concentração geral. \"Espero que a noite de sono improvisada tenha ajudado. Sei que nossa rotina pode ser bem cansativa às vezes, mas lembre-se do porquê fazemos isso.\"\n\nEla faz uma pausa, seu olhar se desviando por um segundo para o restante da equipe trabalhando em silêncio antes de voltar para você.\n\n\"Enfim, preciso de um favor\", continua ela, inclinando a cabeça sutilmente na direção de Francisco. \"O nosso gênio ali está em outro planeta, processando todos os relatórios que trouxemos. Não quero nem pensar em quebrar a concentração dele agora. Se ele já tem essa cara séria normalmente, imagine o humor que fica quando alguém ousa interromper uma linha de raciocínio. Um dia você se acostuma. Ou não\"\n\nSeu sorriso some, dando lugar à expressão focada de uma líder. \"Lembro de ter lido que os três crimes que recebemos tiveram registros de itens roubados. Tenho uma suspeita que preciso confirmar. Poderia consultar para mim quais itens foram levados nos crimes associados ao código de caso '347B9'?\"",
        "enunciado": "Consulte, na tabela ’Crimes’, o item roubado de todos os registros que possuem o código de caso igual a '347B9'",
        "dica": "\"Conto com você, recruta. É uma busca simples, basta filtrar pelo código de caso que te passei. Vamos ver o que você encontra.\"\n\nDesta vez, a sua tarefa é focar em uma única coluna. Você precisará consultar a tabela **Crimes** e usar a cláusula **WHERE** para encontrar todos os registros que correspondam a um código de caso específico. Lembre-se de selecionar apenas a coluna que contém a informação do item roubado.\n\nA tabela que você precisa consultar se chama **Crimes**. Verifique a estrutura dela com o comando abaixo para encontrar os nomes exatos das colunas.\n\n```sql\nPRAGMA table_info(Crimes);\n```",
        "feedback_correto": "\"Muito obrigada, Recruta. Tenho quase certeza de que encontrei um padrão nesses casos\"",
        "feedback_errado": "\"Essas não são as informações que pedi. Estamos quase chegando em Goiânia, faça a consulta novamente antes de chegarmos\"",
        "personagem_nome": "Emília",
        "solucao": "SELECT item_roubado FROM Crimes WHERE codigo_caso = '347B9';",
        "codigo_base": "C1S2"
    },
    {
        "id": 6,
        "codigo_cap": "C1",
        "narrativa": "Ao chegarem em Goiânia, vocês se instalam em uma ampla sala de reuniões na delegacia principal da cidade. O ar tem o cheiro de café fresco e de trabalho acumulado. Enquanto a equipe organiza os quadros brancos e espalha os registros dos casos sobre a mesa, a reunião começa.\n\nFrancisco é o primeiro a falar:\n\n\"Concluí a análise de todos os homicídios registrados nesta cidade desde 2023. Identifiquei uma lista preliminar de vítimas que se alinham ao nosso agressor. Contudo, para confirmar a correlação, necessitamos de um parâmetro de filtragem mais forte. Minha hipótese inicial é que todas as vítimas possuem 40 anos ou mais.\"\n\nEmília, que ouvia atentamente do outro lado da mesa, levanta a mão.\n\n\"Acho que posso ajudar com isso. Encontrei um padrão que você deixou passar.\"\n\nUma visível expressão de aborrecimento cruza o rosto de Francisco ao ouvir a provocação. Emília continua, com um leve sorriso.\n\n\"As nossas três vítimas confirmadas tiveram um pertence pessoal roubado, algo que os familiares notaram de imediato. Nosso assassino é um colecionador. Recruta\", ela se vira para você, e seu tom muda de desafiador para diretivo, \"vamos montar a lista definitiva. Consulte o nome completo das vítimas com 40 anos ou mais da cidade de Goiânia, o item roubado de cada uma e a data do crime. Faça a ordenação em ordem alfabética para ficar mais fácil de lermos os dados. Com essas informações, poderemos finalmente definir o perfil dele.\"",
        "enunciado": "A partir das tabelas 'Vitimas' e 'Crimes', consulte o nome completo da vítima, o item roubado e a data do crime para todas as vítimas da cidade de 'Goiânia' que tenham 40 anos de idade ou mais. Os resultados devem ser ordenados em ordem alfabética pelo nome da vítima.",
        "dica": "\"Vamos lá, recruta, agora a coisa fica interessante. Precisamos juntar as informações das vítimas com as dos crimes. Pense em como conectar os dados das duas tabelas. E não se esqueça de organizar a lista no final para facilitar nossa análise.\"\n\nEsta é a sua consulta mais complexa até agora. Você precisará de informações que estão em duas tabelas separadas: **Vitimas** e **Crimes**. Para combinar dados de múltiplas tabelas, você deve usar a cláusula **JOIN**, especificando qual coluna elas têm em comum para se conectarem.\n\nDepois de juntar as tabelas, aplique os filtros de cidade e idade na cláusula **WHERE**.\n\nPor fim, para organizar o resultado em ordem alfabética como solicitado, utilize a cláusula **ORDER BY** no final da sua consulta.\n\nVocê precisará examinar a estrutura de ambas as tabelas para encontrar a coluna em comum e os nomes exatos das colunas que precisa selecionar e filtrar. Use os seguintes comandos:\n\n```sql\nPRAGMA table_info(Vitimas);\nPRAGMA table_info(Crimes);\n```",
        "feedback_correto": "\"Bom trabalho! Passarei essa lista para Francisco. Acredito que ele terá alguma análise genial para fazer\"",
        "feedback_errado": "\"Essa não me parece ser a lista correta. Tente de novo, Recruta!\"",
        "personagem_nome": "Emília",
        "solucao": "SELECT v.nome_completo, c.item_roubado, c.data_crime FROM Vitimas AS v JOIN Crimes AS c ON v.id = c.id_vitima WHERE v.cidade = 'Goiânia' AND v.idade >= 40 ORDER BY nome_completo ASC;",
        "codigo_base": "C1S2"
    },
    {
        "id": 7,
        "codigo_cap": "C1",
        "narrativa": "A sala de reuniões é um centro de atividade focada. A equipe analisa a lista definitiva, riscando nomes, fazendo anotações nos quadros brancos e discutindo hipóteses em voz baixa. Em meio a essa concentração, Henrique se aproxima da sua mesa com um andar tranquilo.\n\n\"E então, recruta? Encontrando seu lugar no meio do caos?\", ele pergunta com um sorriso discreto. \"Tenho uma análise que pode nos ajudar a clarear as coisas.\"\n\nEle se apoia na beirada da mesa, mantendo o tom de conversa.\n\n\"É o tipo de cálculo que eu poderia pedir para o supercomputador que o Francisco chama de cérebro\", ele diz, gesticulando discretamente para o colega concentrado. \"Mas quero ter certeza de que ele não perca o foco. E também quero ver do que você é capaz\"\n\nHenrique se endireita, seu tom se tornando um pouco mais sério, mas ainda encorajador.\n\n\"A Gláucia consolidou todos os casos confirmados em uma nova tabela chamada 'Vitimas_colecionador'. Sim, foi o apelido que demos para ele. Quero que você consulte essa tabela e me retorne três informações: a média de idade das vítimas, a idade da mais jovem e a da mais velha. Esses dados são essenciais para definirmos o perfil da vitimologia desse maluco\"",
        "enunciado": "A partir da tabela 'Vitimas_colecionador', calcule e retorne a média de idade de todas as vítimas, assim como a idade da vítima mais jovem e a da mais velha.",
        "dica": "\"Beleza, recruta, hora de fazer a matemática. Quero o pacote completo: a média de idade, a idade do caçula e a do vovô do grupo. O SQL tem uns truques pra fazer isso de uma vez só. Mostra pra mim.\"\n\nPara resolver este desafio, você não vai filtrar linhas, mas sim calcular valores a partir de uma coluna inteira. O SQL oferece \"funções de agregação\" para isso.\n\nVocê precisará usar três funções diferentes na sua cláusula **SELECT**: uma para calcular a **média** (AVG), uma para encontrar o valor **mínimo** (MIN) e outra para o valor **máximo** (MAX). Todas elas podem ser usadas na mesma consulta para retornar os três resultados de uma vez.\n\nA nova tabela consolidada se chama **Vitimas_colecionador**. Use o comando abaixo para confirmar o nome da coluna de idade.\n\n```sql\nPRAGMA table_info(Vitimas_colecionador);\n```",
        "feedback_correto": "\"Valeu, Recruta. Esses dados irão nos ajudar bastante. Vamos lá pegar esse louco!\"",
        "feedback_errado": "\"Eu não sou um gênio, mas tenho quase certeza de que esse resultado está errado. Tente de novo, Recruta!\"",
        "personagem_nome": "Henrique",
        "solucao": "SELECT avg(idade) as media, min(idade) as minimo, max(idade) as maximo FROM Vitimas_colecionador;",
        "codigo_base": "C1S2"
    },
    {
        "id": 8,
        "codigo_cap": "C1",
        "narrativa": "Mal Henrique se afasta e Gláucia já está de pé, gesticulando para o quadro branco.\n\n\"Ideia! Brilhante!\", diz ela, mais para si mesma do que para os outros. \"Os itens roubados são antiguidades, e as idades batem com o perfil de colecionadores. Eles não acham isso em lojas, eles usam a internet... Fóruns!\"\n\nSeu olhar encontra o seu, intenso e decidido.\n\n\"Recruta, preciso de um cruzamento de dados, agora. Temos o RG das vítimas na tabela 'Vitimas_colecionador'. Use isso para encontrar o email delas no banco de dados 'Cidadaos'. Com os e-mails, você consegue rastrear a atividade online de cada uma na tabela 'Atividades_online'. Se eu estiver certa, um nome de fórum vai se repetir como um padrão.\"\n\nEla bate levemente na sua mesa para dar ênfase. \"Mãos à obra! Quero o nome desse fórum!\"",
        "enunciado": "A partir das tabelas 'Vitimas_colecionador', 'Cidadaos' e 'Atividades_online', elabore uma consulta que retorne o nome dos fóruns frequentados pelas vítimas. Use DISTINCT para eliminar duplicatas",
        "dica": "\"Vamos, recruta, o caminho é esse! Das vítimas para os cidadãos, dos cidadãos para a internet! É uma corrente de dados, você só precisa conectar os elos. Quero ver a mágica acontecer!\"\n\nEste desafio levará suas habilidades de **JOIN** a um novo patamar. Você precisará conectar três tabelas em sequência: **Vitimas_colecionador** com **Cidadaos**, e depois **Cidadaos** com **Atividades_online**. Para cada **JOIN**, você deve identificar a coluna que serve como ponte entre as tabelas.\n\nAlém disso, como várias vítimas podem ter frequentado o mesmo fórum, o resultado pode ter nomes duplicados. Para limpar a lista e mostrar cada nome de fórum uma única vez, use a palavra-chave **DISTINCT** logo após o **SELECT**.\n\nVocê precisará da estrutura de todas as três tabelas para encontrar as colunas de conexão. Use os comandos:\n\n```sql\nPRAGMA table_info(Vitimas_colecionador);\nPRAGMA table_info(Cidadaos);\nPRAGMA table_info(Atividades_online);\n```",
        "feedback_correto": "\"Você conseguiu! Incrível! Meu palpite, estava certo. tem um único grupo que todas as vítimas estavam. Essa é a zona de caça do nosso assassino\"",
        "feedback_errado": "\"Assim você me desanima, Recruta. Essa não é a resposta que estamos procurando!\"",
        "personagem_nome": "Gláucia",
        "solucao": "SELECT DISTINCT ao.nome_forum FROM Vitimas_colecionador vc JOIN Cidadaos c ON vc.rg = c.rg JOIN Atividades_online ao ON c.email = ao.email;",
        "codigo_base": "C1S2"
    },
    {
        "id": 9,
        "codigo_cap": "C1",
        "narrativa": "Um silêncio chocado toma conta da sala. Todos olham para você, processando a importância da sua descoberta. A peça final. Francisco é o primeiro a quebrar o silêncio. Ele se dirige a você, com o olhar focado e analítico.\n\n\"Recruta. A convergência dos dados está completa. Agora temos os parâmetros necessários para isolar e identificar o responsável por estas atrocidades.\"\n\nEle faz uma pausa, organizando os pensamentos como se lesse um relatório em sua mente.\n\n\"O perfil psicológico é claro: um indivíduo entre 25 e 30 anos, nascido entre 1995 e 2000. A vitimologia e a natureza dos itens roubados indicam um anseio patológico por posse, frustrado por limitações financeiras. O homicídio tornou-se o meio para um fim: adquirir seus objetos de desejo e, secundariamente, manifestar sua frustração acumulada. Sua tarefa final é aplicar este filtro.\"\n\nFrancisco olha diretamente para você, e sua voz é firme, como a de um cirurgião antes do corte final.\n\n\"Acesse a base de dados 'Cidadaos'. Quero o nome completo e o RG de todos os membros do fórum 'Ecos do Passado' cujo ano de nascimento esteja dentro do intervalo que especifiquei. A lógica nos diz que a resposta estará nessa lista.\"",
        "enunciado": "A partir das tabelas 'Cidadaos' e 'Atividades_online', consulte o nome completo e o RG de todos os membros do fórum 'Ecos do Passado' que nasceram entre os anos de 1995 e 2000, inclusive.",
        "dica": "\"A conclusão está ao nosso alcance, recruta. A sua tarefa consiste em aplicar dois filtros lógicos sobre o conjunto de dados. O primeiro filtro isola o universo de suspeitos ao fórum especificado. O segundo restringe este universo ao nosso perfil demográfico. Execute.\"\n\nPara esta consulta final, você precisará novamente conectar as tabelas **Cidadaos** e **Atividades_online** usando um **JOIN**.\n\nNa cláusula **WHERE**, você aplicará duas condições. A primeira é uma correspondência de texto para o nome do fórum. A segunda é a novidade deste nível: para filtrar um intervalo de valores, como um período de anos, você pode usar o operador **BETWEEN**. A estrutura é `coluna BETWEEN valor1 AND valor2`, e ele já inclui os valores inicial e final na busca.\n\nVerifique a estrutura das duas tabelas para confirmar os nomes das colunas de conexão e dos campos que você precisa consultar e filtrar.\n\n```sql\nPRAGMA table_info(Cidadaos);\nPRAGMA table_info(Atividades_online);\n```",
        "feedback_correto": "\"Somente um nome nessa lista, o Colecionador finalmente desmascarado. Ótimo trabalho, Recruta\"",
        "feedback_errado": "\"Não, essa não é a resposta. Tente novamente, Recruta!\"",
        "personagem_nome": "Dr. Francisco Buarque",
        "solucao": "SELECT c.rg, c.nome_completo FROM Cidadaos c JOIN Atividades_online ao ON c.email = ao.email WHERE ao.nome_forum = 'Ecos do Passado' AND c.ano_nascimento BETWEEN 1995 AND 2000;",
        "codigo_base": "C1S2"
    },
    {
        "id": 10,
        "codigo_cap": "C1",
        "narrativa": "A poeira do caso do Colecionador já havia baixado, deixando um rastro de tédio e silêncio no escritório. Você e Gláucia estavam praticamente hipnotizados pelas telas, até que ela rola a cadeira dela para mais perto da sua mesa, com um ar conspiratório.\n\n\"Ei\", ela sussurra, como se estivesse prestes a contar um segredo de estado. \"Estou oficialmente entediada. E quando fico entediada, fico curiosa.\"\n\nEla aponta com o queixo para um monitor que exibe as câmeras da carceragem. \"Viu aquele detento ali? O universo precisa de mais rostos como aquele e menos papelada como esta.\"\n\nUm sorriso se espalha pelo rosto dela.\n\n\"Vamos fazer uma pequena investigação paralela. Consegui ver o ID dele na tela do guarda: 32. Puxa a ficha dele pra mim e cruza com a nossa base de casos, retornando o código do caso, o tipo do caso e a descrição. Quero saber que tipo de problema um cara desses arruma.\"",
        "enunciado": "A partir das tabelas 'Casos' e 'Detento_caso', consulte o código, o tipo e a descrição do caso associado ao detento cujo ID é 32",
        "dica": "\"Vamos lá, recruta, me ajuda a matar essa curiosidade! O segredo está em conectar o ID do nosso galã misterioso com a ficha de casos dele. Pense nisso como uma ponte de dados. Construa a ponte e me mostre o que tem do outro lado!\"\n\nPara resolver este quebra-cabeça, você precisará buscar informações em duas tabelas diferentes. A tabela **Detento_caso** contém o link entre o detento e o código do caso, enquanto a tabela **Casos** tem os detalhes que queremos (código, tipo e descrição).\n\nUse um **JOIN** para conectar as duas tabelas pela coluna que elas têm em comum. Depois de conectá-las, use a cláusula **WHERE** para filtrar os resultados e mostrar apenas os casos do detento com o ID **32**.\n\nVocê vai precisar da estrutura das duas tabelas para descobrir como conectá-las. Use os comandos abaixo:\n\n```sql\nPRAGMA table_info(Casos);\nPRAGMA table_info(Detento_caso);\n```",
        "feedback_correto": "\"Você conseguiu! Ah, ele está envolvido com casos de agressão. Valentões não fazem o meu tipo, não importa o quão bonitos sejam\"",
        "feedback_errado": "\"Recruta, isso é trabalho sério. Tenta uma nova consulta, estou muito curiosa\"",
        "personagem_nome": "Gláucia",
        "solucao": "SELECT c.codigo, c.descricao, c.tipo FROM Casos C JOIN Detento_caso dc ON c.codigo = dc.codigo_caso WHERE dc.id_detento = 32;",
        "codigo_base": "C1S3"
    },
    {
        "id": 11,
        "codigo_cap": "C1",
        "narrativa": "A tela exibe a longa lista de infrações, e você e Gláucia estão tão absortas na leitura que não percebem a figura que se aproxima em silêncio por trás de suas cadeiras.\n\n\"A correlação é estatisticamente significativa.\"\n\nA voz de Francisco, desprovida de qualquer emoção, soa diretamente atrás de vocês. O susto é inevitável; você e Gláucia se sobressaltam, virando-se bruscamente. Ele está ali, parado, o olhar fixo no monitor de vocês, ignorando completamente a reação de vocês.\n\n\"O resultado está dentro dos parâmetros esperados\", ele continua, como se estivesse ditando um relatório. \"A maioria dos casos envolve agressão física. Proponho validar essa hipótese com dados percentuais. Para isso, precisamos do universo total de eventos como base de cálculo. Recruta\", ele finalmente desvia o olhar da tela para você, \"sua tarefa: consulte e retorne para mim a quantidade absoluta de todos os casos registrados no ano de 2025.\"",
        "enunciado": "Consulte na tabela 'Casos' e retorne a quantidade total de casos registrados durante o ano de 2025",
        "dica": "\"Recruta, para estabelecermos uma base de cálculo fidedigna, é imperativo quantificar o universo total de eventos. Sua diretriz é aplicar um filtro temporal para o ano de 2025 e, em seguida, computar o número absoluto de registros resultantes. Proceda.\"\n\nSua tarefa é contar o número total de linhas na tabela **Casos** que atendem a um critério específico. Primeiro, utilize a cláusula **WHERE** para filtrar os casos que ocorreram no ano de 2025.\n\nEm seguida, para contar quantas linhas foram retornadas por esse filtro, use a função de agregação **COUNT(*)** na sua cláusula **SELECT**.\n\nA tabela que contém os dados necessários se chama **Casos**. Use o comando a seguir para visualizar sua estrutura.\n\n```sql\nPRAGMA table_info(Casos);\n```",
        "feedback_correto": "\"Esse é o resultado o qual eu estava esperando. Muito bem, vamos para a próxima etapa da nossa investigação extraoficial\"",
        "feedback_errado": "\"Não sei o número exato, mas tenho certeza de que não é esse. Faça a consulta novamente, Recruta\"",
        "personagem_nome": "Dr. Francisco Buarque",
        "solucao": "SELECT count(*) as quantidade_casos FROM Casos WHERE ano = 2025;",
        "codigo_base": "C1S3"
    },
    {
        "id": 12,
        "codigo_cap": "C1",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 13,
        "codigo_cap": "C1",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 14,
        "codigo_cap": "C1",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 15,
        "codigo_cap": "C1",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 16,
        "codigo_cap": "C1",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 17,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 18,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 19,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 20,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 21,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 22,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 23,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    },
    {
        "id": 24,
        "codigo_cap": "C2",
        "narrativa": "\"Gláucia, está aí? Descobrimos que o Roberto, que testemunhou no caso, na verdade é o assassino. Ele está prestes a fazer mais uma vítima! Precisamos de todas as informações dele agora!\"\n\nVocê escuta esse chamado urgente assim que retorna com os cafés que sua supervisora Gláucia pediu. Ao chegar à mesa, percebe que ela não está por perto. Sem saber ao certo o que fazer, você deixa os cafés e pensa em procurar sua chefe, mas a voz no rádio insiste:\n\n\"Está ouvindo?! Precisamos desses dados agora, ou mais uma pessoa pode morrer!\"\n\nO computador de Gláucia está ligado, com o terminal do banco de dados aberto, pronto para um comando. De repente, a responsabilidade está nas suas mãos.",
        "enunciado": "Recupere todos os dados da testemunha chamada Roberto, que possui o RG 12.345.678-9, na tabela pessoa. Se precisar de ajuda, consulte a aba \"Dica\" para mais informações.",
        "dica": "\"Ei, você não é a Gláucia! Estamos sem tempo para introduções, só siga minhas instruções\"\n\nPara resolver este nível, será necessário usar a construção básica de uma consulta SQL composta pelas cláusulas SELECT, FROM e WHERE.\n\nA tabela com a resposta se chama \"pessoa\", execute o seguinte comando para visualizar sua estrutura:\n\n```sql\nPRAGMA table_info(pessoa);\n```",
        "personagem_nome": "Derek",
        "solucao": "SELECT * FROM pessoa WHERE nome = 'Roberto' AND rg = '12.345.678-9';",
        "feedback_correto": "Muito bem! Você recuperou corretamente todos os dados do Roberto.",
        "feedback_errado": "Ainda não é a resposta correta. Verifique se está filtrando pelo nome e pelo RG informados e tente novamente.",
        "codigo_base": "BD01"
    }
]