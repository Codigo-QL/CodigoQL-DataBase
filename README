# C√≥digo QL - Banco de Dados

Reposit√≥rio de versionamento e colabora√ß√£o de dados do projeto **C√≥digo QL**, usando **PostgreSQL 17** (Docker), **Prisma ORM**, **Node.js** e **TypeScript**.

---

## üöÄ O que este projeto faz?

- Mant√©m a estrutura do banco de dados e dados base em c√≥digo, usando arquivos versionados.
- Facilita colabora√ß√£o aberta: qualquer pessoa pode propor adi√ß√£o de dados ou ajustes via pull request.
- Automatiza a cria√ß√£o, atualiza√ß√£o e povoamento do banco para desenvolvimento local, garantindo consist√™ncia e reprodutibilidade.

---

## üõ†Ô∏è **Pr√©-requisitos**

- [Node.js LTS](https://nodejs.org/) (v18+ recomendado)
- [Docker Desktop](https://www.docker.com/products/docker-desktop/)
- [npm](https://www.npmjs.com/) ou [yarn](https://yarnpkg.com/)

---

## üìù **Primeira configura√ß√£o (fa√ßa uma √∫nica vez por m√°quina)**

1. **Clone o reposit√≥rio:**
    ```bash
    git clone https://github.com/sua-org/codigo-ql-database.git
    cd codigo-ql-database
    ```

2. **Instale as depend√™ncias do projeto:**
    ```bash
    npm install
    ```

3. **Suba o banco de dados PostgreSQL no Docker:**
    ```bash
    docker compose up -d
    ```
    > O banco de dados ficar√° dispon√≠vel sempre que o Docker estiver rodando.

4. **Execute as migrations iniciais para criar as tabelas:**
    ```bash
    npx prisma migrate dev --name init
    ```

5. **(Opcional) Adicione arquivos de dados (JSON/YAML, imagens, etc) nas pastas `data/` conforme instru√ß√µes da documenta√ß√£o.**

6. **Popule o banco com os dados dos arquivos usando o seed:**
    ```bash
    npx ts-node prisma/seed.ts
    ```
    Ou, se preferir:
    ```bash
    npm run prisma-seed
    ```

---

## üü¢ **Como rodar o projeto localmente no dia a dia**

> Sempre que for come√ßar a trabalhar no projeto, fa√ßa:

1. **Inicie o banco de dados (se ainda n√£o estiver rodando):**
    ```bash
    docker compose up -d
    ```
    O banco persiste dados entre reinicializa√ß√µes.

2. **(Se houver mudan√ßas nas tabelas) Rode novamente as migrations:**
    ```bash
    npx prisma migrate dev
    ```

3. **(Se houver mudan√ßas nos dados dos arquivos) Rode novamente o seed:**
    ```bash
    npx ts-node prisma/seed.ts
    ```

---

## üóÑÔ∏è **Sobre os dados e estrutura**

- Os dados que preenchem o banco (ex: entidades, relacionamentos, arquivos bin√°rios) est√£o em subpastas dentro de `data/`, em arquivos JSON, YAML, imagens ou outros formatos.  
- Os scripts de seed s√£o respons√°veis por ler esses arquivos e inserir/atualizar os dados no banco automaticamente.
- Instru√ß√µes detalhadas para contribuir com dados est√£o na documenta√ß√£o interna do projeto.

---

## üóëÔ∏è **Como resetar o banco de dados localmente (apagar tudo!)**

```bash
docker compose down -v
docker compose up -d
npx prisma migrate dev --name init
npx ts-node prisma/seed.ts
